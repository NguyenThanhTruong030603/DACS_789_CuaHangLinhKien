@model ShoppingCart

@{
    ViewData["Title"] = "Index";
    decimal total = Model.Items.Sum(i => i.Price * i.Quantity);
    decimal discountAmount = 0;
    decimal discountPercentage = Model.DiscountPercentage;
    decimal finalPrice = total;

    if (!string.IsNullOrEmpty(Model.DiscountCode))
    {
        discountAmount = total * discountPercentage / 100;
        finalPrice = total - discountAmount;
    }
}

<div class="container my-4">
    <div class="row">
        <!-- Tiêu đề Giỏ hàng nằm ở góc trên bên trái -->
        <<div class="col-12 mb-3 d-flex justify-content-between align-items-center">
            <h2 class="text-left">Giỏ hàng</h2> <!-- Tiêu đề Giỏ hàng -->
            <a class="btn btn-outline-primary mt-3 cart-btn-order-list" asp-controller="ShoppingCart" asp-action="OrderList">Đơn hàng đã đặt</a>
        </div>
        

        <!-- Cột danh sách sản phẩm -->
        <div class="col-md-8">
            <div class="card mb-3">
                <div class="card-header d-flex justify-content-between">
                    <strong>CÔNG TY CỔ PHẦN THƯƠNG MẠI DỊCH VỤ 789STORE</strong>
                    <a href="/ShoppingCart/ClearCart" class="text-danger">Xóa tất cả</a>
                </div>
                <div class="card-body">
                    <table class="table align-middle">
                        <thead>
                            <tr>
                                <th>Sản phẩm</th>
                                <th>Đơn giá</th>
                                <th>Số lượng</th>
                                <th>Thành tiền</th>
                                <th>Hành động</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Sản phẩm -->
                            @foreach (var item in Model.Items)
                            {
                                <tr>
                                    <td>
                                        <strong>@item.Name</strong><br>
                                        <small class="text-muted">ID: @item.ProductId</small>
                                    </td>
                                    <td>@item.Price₫</td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <button class="btn btn-sm btn-outline-dark decreasement" data-product-id="@item.ProductId">-</button>
                                            <span class="quantity mx-2" data-price="@item.Price">@item.Quantity</span>
                                            <button class="btn btn-sm btn-outline-dark increment" data-product-id="@item.ProductId">+</button>
                                        </div>
                                    </td>
                                    <td class="total">
                                        @((item.Price * item.Quantity).ToString("N0"))₫
                                    </td>
                                    <td>
                                        <a href="#" class="text-danger remove-product" data-product-id="@item.ProductId">Xóa</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Cột thông tin thanh toán -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">Khuyến mãi</div>
                <div class="card-body">
                    <form method="post" asp-action="ApplyDiscount">
                        <div class="input-group mb-3">
                            <input type="text" id="discountCode" name="discountCode" class="form-control" placeholder="Chọn hoặc nhập mã khuyến mãi">
                            <button type="submit" class="btn btn-primary">Áp dụng</button>
                        </div>
                    </form>
                    <p class="mb-1"><strong>Tổng tạm tính:</strong> <span class="float-end" id="totalPriceValue">@total₫</span></p>
                    <p class="mb-1">
                        <strong>Giảm giá:</strong>
                        <span class="float-end text-success fw-bold" id="discountAmount">
                            @if (discountAmount > 0)
                            {
                                @("-" + discountAmount.ToString("N0"))
                            }
                            else
                            {
                                @("0₫")
                            }
                        </span>
                    </p>
                    <p class="mb-1">
                        <strong>Thành tiền:</strong>
                        <span class="float-end text-primary fw-bold" id="finalPriceValue">@finalPrice₫</span>
                    </p>
                    <a class="btn btn-primary w-100 mt-3 cart-btn-checkout"
                       asp-controller="ShoppingCart"
                       asp-action="Checkout">THANH TOÁN</a>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        // Thay đổi số lượng sản phẩm
        $('.increment, .decreasement').click(function () {
            var productId = $(this).data('product-id');
            var quantityElement = $(this).siblings('.quantity');
            var currentQuantity = parseInt(quantityElement.text());

            if ($(this).hasClass('increment')) {
                quantityElement.text(currentQuantity + 1);
            } else {
                if (currentQuantity > 1) {
                    quantityElement.text(currentQuantity - 1);
                } else {
                    alert("Số lượng không thể nhỏ hơn 1");
                }
            }
            updateTotal($(this));
            updateCart(productId, parseInt(quantityElement.text()));
        });

        // Xóa sản phẩm
        $('.remove-product').click(function () {
            var productId = $(this).data('product-id');
            $(this).closest('tr').remove();
            removeProductFromCart(productId);
            updateTotalPrice();
        });

        // Hàm cập nhật tổng tiền cho từng sản phẩm
        function updateTotal(button) {
            var quantityElement = button.siblings('.quantity');
            var currentQuantity = parseInt(quantityElement.text());
            var price = parseFloat(quantityElement.data('price'));
            var totalElement = button.closest('tr').find('.total');
            var totalValue = price * currentQuantity;
            totalElement.text(totalValue.toFixed(2) + "₫");
            updateTotalPrice();
        }

        // Hàm cập nhật tổng tiền và giá cuối cùng
        function updateTotalPrice() {
            var totalPrice = 0;
            $('.total').each(function () {
                totalPrice += parseFloat($(this).text().replace("₫", ""));
            });
            $('#totalPriceValue').text(totalPrice.toFixed(2) + "₫");
            updateDiscountAndFinalPrice();
        }

        // Cập nhật giảm giá và giá thành tiền
        function updateDiscountAndFinalPrice() {
            var totalPrice = parseFloat($('#totalPriceValue').text().replace("₫", ""));
            var discountPercentage = @discountPercentage; // Giảm giá từ server
            var discountAmount = totalPrice * discountPercentage / 100;
            var finalPrice = totalPrice - discountAmount;
            $('#finalPriceValue').text(finalPrice.toFixed(2) + "₫");
        }

        // Hàm gọi Ajax cập nhật giỏ hàng
        function updateCart(productId, quantity) {
            $.ajax({
                type: "POST",
                url: "/ShoppingCart/UpdateCart",
                data: { productId: productId, quantity: quantity },
                success: function (response) {
                    console.log("Cập nhật giỏ hàng thành công.");
                },
                error: function (xhr, status, error) {
                    console.error("Lỗi khi cập nhật giỏ hàng:", xhr.responseText);
                }
            });
        }

        // Hàm xóa sản phẩm khỏi giỏ hàng
        function removeProductFromCart(productId) {
            $.ajax({
                type: "POST",
                url: "/ShoppingCart/RemoveFromCart",
                data: { productId: productId },
                success: function (response) {
                    console.log("Đã xóa sản phẩm khỏi giỏ hàng.");
                },
                error: function (xhr, status, error) {
                    console.error("Lỗi khi xóa sản phẩm:", xhr.responseText);
                }
            });
        }
    });
</script>


<style>
    body {
       
    }

    .card {
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .table {
        margin-bottom: 0;
    }

        .table td {
            vertical-align: middle;
        }

    .card-header {
        background-color: #f8f9fa;
        font-weight: bold;
    }

    .input-group .form-control {
        border-radius: 0;
    }

    .btn-primary {
        background-color: #0056b3;
        border-color: #004085;
    }

        .btn-primary:hover {
            background-color: #004085;
            border-color: #003766;
        }

    .btn-outline-dark {
        border-color: #ccc;
        color: #333;
    }

        .btn-outline-dark:hover {
            background-color: #f8f9fa;
        }

    .text-primary {
        font-size: 18px;
    }

    .text-danger {
        font-size: 14px;
    }
</style>



