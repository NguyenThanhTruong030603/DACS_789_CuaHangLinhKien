@model IEnumerable<BaiGiuaKy.Models.Order>


@{
    ViewData["Title"] = "Order List";
}

<h2>lịch Sử Đơn Hàng</h2>

@if (Model != null && Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Mã đơn hàng</th>
                <th>Ngày đặt</th>
                <th>Phần trăm giảm giá</th>
                <th>Phương thưc thanh toán</th>
                <th>Tổng cộng</th>
                <th>Trạng thái</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model)
            {
                <tr>
                    <td>@order.Id</td>
                    <td>@order.OrderDate.ToString("dd/MM/yyyy")</td>
                    <td>@order.DiscountPercentage</td>
                    <td>@order.PaymentMethod</td>
                    <td>@order.TotalPrice VND</td>
                    <td>@GetOrderStatusText(order.Status)</td>
                    <td>
                        <!-- Link đến trang chi tiết đơn hàng -->
                        <a href="@Url.Action("OrderDetails", "ShoppingCart", new { orderId = order.Id })">Chi tiết</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>@ViewBag.Message</p>
}
<div class="card-footer text-muted text-center">
    <a asp-action="Index" class="btn btn-outline-primary">Quay lại </a>
</div>

@functions {
    public string GetOrderStatusText(OrderStatus status)
    {
        switch (status)
        {
            case OrderStatus.ChờXácNhận:
                return "Chờ xác nhận";
            case OrderStatus.ĐãXácNhận:
                return "Đã xác nhận";
            case OrderStatus.ĐãGiao:
                return "Đang giao hàng";
            case OrderStatus.ĐãGiaoThànhCông:
                return "Đã giao thành công";
            case OrderStatus.ĐãHủy:
                return "Đã hủy";
            default:
                return "";
        }
    }
}