@using Microsoft.AspNetCore.Identity
@using BaiGiuaKy.Models
@model BaiGiuaKy.Models.Product
@{
    var userManager = ViewData["UserManager"] as UserManager<ApplicationUser>;
}
<div class="container mt-5">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card shadow-lg">
                <div class="card-header bg-primary text-white">
                    <h3 class="card-title">@Model.Name</h3>
                </div>
                <div class="card-body">
                    <div class="text-center">
                        @if (!string.IsNullOrEmpty(Model.ImageUrl))
                        {
                        <img src="@Model.ImageUrl" alt="Product Image" class="img-fluid rounded" style="max-height: 300px;" />
                        }
                    </div>
                    <h4 class="text-muted mt-3">Giá: <span class="text-danger">@Model.Price VND</span></h4>
                    <p class="product-description mt-3">Thông tin chi tiết: @Model.Description</p>
                    <a asp-action="Index" class="btn btn-secondary">Quay lại </a>
                    <a asp-controller="ShoppingCart" asp-action="AddToCart" asp-route-ProductId="@Model.Id" asp-route-quantity="1" class="btn btn-outline-primary">
                        <i class="bi-cart-plus-fill"></i> Thêm vào giỏ
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>
@if (User.Identity.IsAuthenticated)
{
<div class="card mt-4">
    <div class="card-header bg-secondary text-white">
        <h4>Thêm bình luận</h4>
    </div>
    <div class="card-body">
        <form asp-action="AddComment" method="post">
            <input type="hidden" name="productId" value="@Model.Id" />
            <div class="mb-3">
                <textarea class="form-control" name="content" rows="3" required placeholder="Nhập bình luận..."></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Gửi bình luận</button>
        </form>
    </div>
</div>
}
else
{
<div>
    Bạn cần <a href="@Url.Action("Login", "Account", new { area = "Identity" })">đăng nhập</a> để bình luận.
</div>
}

<!-- Display Comments -->
<div class="card mt-4">
    <div class="card-header bg-secondary text-white">
        <h4>Bình luận</h4>
    </div>
    <div class="card-body">
        @if (Model.Comments != null && Model.Comments.Any())
            {
        @foreach (var comment in Model.Comments)
                {
        <div class="mb-3" style="position: relative;">
            <strong>@comment.User.UserName</strong> - <small>@comment.CreatedAt.ToLocalTime()</small>
            <p>@comment.Content</p>

            @if (User.Identity.IsAuthenticated && comment.UserId == userManager.GetUserId(User))
                        {
            <div class="comment-actions" style="position: absolute; top: 10px; right: 10px;">
                <button class="btn btn-warning btn-sm edit-comment-btn" onclick="showEditForm('@comment.Id', '@comment.Content')">Sửa</button>
                <button class="btn btn-danger btn-sm delete-comment-btn" onclick="showDeleteConfirmation('@comment.Id')">Xóa</button>
            </div>

 <!-- Edit Comment Form (Initially Hidden) -->
            <div id="edit-comment-form-@comment.Id" class="edit-comment-form" style="display: none;">
                <form asp-action="EditComment" method="post">
                    <input type="hidden" name="commentId" value="@comment.Id" />
                    <textarea class="form-control" name="content" rows="3" required>@comment.Content</textarea>
                    <button type="submit" class="btn btn-success mt-2">Chỉnh sửa</button>
                    <button type="button" class="btn btn-secondary mt-2" onclick="hideEditForm('@comment.Id')">Hủy</button>
                </form>
            </div>
                        }
        </div>
                }
            }
            else
            {
        <p>Chưa có bình luận nào cho sản phẩm này.</p>
            }
    </div>
</div>
</div>

<!-- Modal for Delete Confirmation -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationLabel">Xác nhận xóa bình luận</h5>
                <!-- Close button (X) -->
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa bình luận này?
            </div>
            <div class="modal-footer">
                <!-- Hủy button -->
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="cancelDeleteBtn">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Xóa</button>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript for handling edit, delete, and modal actions -->
<script>
    var commentIdToDelete = null;

    // Show Edit Form
    function showEditForm(commentId, content) {
        document.getElementById('edit-comment-form-' + commentId).style.display = 'block';
    }

    // Hide Edit Form
    function hideEditForm(commentId) {
        document.getElementById('edit-comment-form-' + commentId).style.display = 'none';
    }

    // Show Delete Confirmation Modal
    function showDeleteConfirmation(commentId) {
        commentIdToDelete = commentId; // Store commentId to delete
        $('#deleteConfirmationModal').modal('show');
    }

    // Confirm Delete
    document.getElementById('confirmDeleteBtn').addEventListener('click', function () {
        if (commentIdToDelete !== null) {
            // Send delete request via AJAX or redirect to Delete action
            var form = document.createElement('form');
            form.method = 'POST';
            form.action = '@Url.Action("DeleteComment", "Home")';

            var input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'commentId';
            input.value = commentIdToDelete;
            form.appendChild(input);

            document.body.appendChild(form);
            form.submit();
        }
        $('#deleteConfirmationModal').modal('hide'); // Hide modal after action
    });

    // Close modal when cancel button is clicked
    document.getElementById('cancelDeleteBtn').addEventListener('click', function () {
        $('#deleteConfirmationModal').modal('hide'); // Close modal when cancel is clicked
    });
</script>